/*
 * FrameSis.java
 *
 * Created on 12 de noviembre de 2002, 9:22
 */
package xcx;

import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.image.*;
import xcx.ImageFileChooser;
import java.awt.FileDialog;
import java.io.*;

public class FrameSis extends javax.swing.JFrame{
    //guiWallx gwx = new guiWallx();
    wallx wx = new wallx();
    String devolucionDg = new String();
    remox ren = new remox();
    Image img;
    ListCellRenderer lc;
    boolean thumbailsOnOf;
    enc thumbails = new enc();
    
    public boolean isThumbails(){
	    return this.thumbailsOnOf;
    }//isThumbails
    
    public void setThumbails(boolean thum){
	    this.thumbailsOnOf = thum;
    }//setThumbails
    
    public void procesarVector(Vector v, String dirActual){
        for (int i=0; i < v.size(); i++){
            int trabajoStatus = (100 * i)/ v.size();
            String s = (String) v.get(i);
            Image img = Toolkit.getDefaultToolkit().getImage(dirActual + File.separator + s);
            // Se utilzia un objeto MediaTracker para bloquear la tarea hasta
            // que la imagen se haya cargado o hayan transcurrido 10 segundos
            // desde que se inicia la carga
            MediaTracker tracker = new MediaTracker( this );
            tracker.addImage(img,1);
            try {
                if( !tracker.waitForID( 1,10000 ) ) {
                    System.out.println("Se ha superado el tiempo de carga de una imágen. Máximo 10 seg.");
                    System.exit( 1 );
                }//if
            }catch( InterruptedException e ) {
                System.out.println( e );
            }//try
            img = img.getScaledInstance(70, 40, 4);
            trabajo.setValue(trabajoStatus);
            thumbails.make(dirActual+ File.separator + s,40, dirActual + File.separator + "thumbs", true);
        }//for
    }//procesarVector
    
    /** Creates new form FrameSis */
    public FrameSis() {
        if (!wx.InicializarConfig()){
            return;
        }//if
        //Inicializa Splash
        splash sh = new splash(this, false);
        sh.setSize(new java.awt.Dimension(425,297));
        sh.setLocationRelativeTo(this);
        sh.validate();
        sh.show();
        
        //Inicializa FrameSis
        initComponents();
        centrarFrame(this);
        
        //Mostrando estado de carga
        sh.textoBarProgress("Verificando Dir Work");
        crcDirWork();
        for (int i=0; i < 15; i++){
            sh.avanzar(i);
        }//for
        sh.textoBarProgress("Creando lista de Wallpapers");
        jList1.setModel(modeloLista());
        for(int i=14; i < 85; i++){
            sh.avanzar(i);
        }//for
        sh.textoBarProgress("Terminado");
        for(int i=84; i < 101; i++){
            sh.avanzar(i);
        }//for
        sh.dispose();
        trabajo.setVisible(false);
        setThumbails(true);
        //Inicialización completada
    }//constructor FrameSis
    
    public void centrarFrame(JFrame frame) {
        //encargado de centrar esta ventana.
        Dimension tamanoPant=Toolkit.getDefaultToolkit().getScreenSize();
        Dimension tamanoFrame=frame.getSize();
        frame.setLocation((int)(tamanoPant.width-tamanoFrame.width)/2,(int)(tamanoPant.height-tamanoFrame.height)/2);
    }//centrarFrame
    
    private void crcDirWork(){
        //Encargado de setear el directorio de trabajo
        jLabel1.setText(wx.getDirActual());
        jLabel1.setToolTipText("Muestra el directorio de trabajo de wallx");
    }//crcDirWork
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        trabajo = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setTitle("GUI For Wall X");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
        jPanel1.setMaximumSize(new java.awt.Dimension(425, 297));
        jPanel1.setMinimumSize(new java.awt.Dimension(425, 297));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 297));
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("Directorio de trabajo");
        jPanel1.add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, -50, 0));

        jPanel2.setPreferredSize(new java.awt.Dimension(248, 104));
        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jPanel5.setPreferredSize(new java.awt.Dimension(350, 131));
        jScrollPane1.setViewportView(jList1);

        jPanel5.add(jScrollPane1);

        jButton1.setText("A\u00f1adir");
        jButton1.setToolTipText("A\u00f1ade un nuevo wallpaper al sistema");
        jButton1.setPreferredSize(new java.awt.Dimension(95, 26));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jPanel3.add(jButton1);

        jButton2.setText("Quitar");
        jButton2.setToolTipText("Elimina permanentemente un wallpaper del sistema");
        jButton2.setPreferredSize(new java.awt.Dimension(95, 26));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jPanel3.add(jButton2);

        jButton5.setText("Serializar");
        jButton5.setToolTipText("Renombra los wallpapers en orden correlativos");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jPanel3.add(jButton5);

        jButton3.setText("Acerca de...");
        jButton3.setToolTipText("Muestra los Cr\u00e9ditos y algo acerca del autor");
        jButton3.setPreferredSize(new java.awt.Dimension(95, 26));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jPanel3.add(jButton3);

        jButton6.setText("Miniaturas");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jPanel3.add(jButton6);

        trabajo.setString("Generando Miniaturas");
        trabajo.setStringPainted(true);
        jPanel3.add(trabajo);

        jPanel5.add(jPanel3);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        jPanel4.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 6)));
        jLabel2.setForeground(new java.awt.Color(51, 0, 255));
        jLabel2.setText("N\u00ba Wallpapers:");
        jLabel2.setToolTipText("Muestra la cantidad de Wallpapers");
        jPanel4.add(jLabel2);

        jButton4.setText("Salir");
        jButton4.setToolTipText("Finaliza la aplicaci\u00f3n.");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jPanel4.add(jButton4);

        jPanel1.add(jPanel4, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
    
    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
	    if (wx.getExt1().equals("jpg")){
		    // Setea o quita las miniaturas.
		    trabajo.setVisible(true);
		    if (isThumbails()){
			    int valor = JOptionPane.showConfirmDialog(this, "Está a punto de activar esta opción. \nTome nota que la aplicación Tardará en responder, debido a la generación de miniaturas.\nEsta opción se representará activa mientras el botón esté de color verde.", "Activar Miniaturas.", JOptionPane.OK_CANCEL_OPTION);
			    if (valor == JOptionPane.OK_OPTION){
				    /* Con lo siguiente se extraen los elementos y se traspasan a vector
				    */
				    ListModel ls = jList1.getModel();
				    Vector v = new Vector();
				    int total = 0;
				    total = ls.getSize();
				    for(int i=0; i < total; i++){
					    v.add(ls.getElementAt(i));
				    }//for
				    procesarVector(v, wx.getDirActual());
				    jList1.setModel(modeloLista());
				    lc = jList1.getCellRenderer();
				    jList1.setCellRenderer(new MyCellRenderer(wx.getDirActual()));
				    setThumbails(false);
				    jButton6.setBackground(new Color(0, 255, 0));
			    }//if
		    }else{
			    jList1.setCellRenderer(lc);
			    jList1.setModel(modeloLista());
			    setThumbails(true);
			    jButton6.setBackground(new Color(204, 204, 204));
		    }//if
		    trabajo.setVisible(false);
	    }else{
		    JOptionPane.showMessageDialog(this,"No disponible en Windows");
	    }//if
    }//GEN-LAST:event_jButton6MouseClicked
    
    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // boton para renombrar
	if(isThumbails()){
		ListModel ls = jList1.getModel();
		Vector v = new Vector();
		int total = 0;
		total = ls.getSize();
		for(int i=0; i < total; i++){
			v.add(ls.getElementAt(i));
		}//for
		//Obtenido el listado, se envia a la clase remox
		//Llamando los metodos correspondientes de integración para con wallx.
		ren.setListado(v);
		ren.setExt1(wx.getExt1());
		ren.setExt2(wx.getExt1());
		ren.setDirActual(wx.getDirActual());
		ren.setNombre("x-");
		ren.setContador("1");
		ren.Renombrar(ren.getListado());
		ren.setNombre("wallx-");
		/* Renombrar se ejecuta dos veces, la primera como forma temporal,
		* la segunda, la definitiva.
		*/
		ren.Renombrar(ren.getListado());
		//Se devuelve el listado actualizado
		jList1.setModel(modeloLista());
	}else{
		JOptionPane.showMessageDialog(this,"Serializar no puede activarse mientras Miniaturas esté activo.");
	}//if
    }//GEN-LAST:event_jButton5MouseClicked
    
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // Muestra un JDialog Acerca de.
        about a = new about(this, true);
        a.setLocationRelativeTo(this);
        a.show();
    }//GEN-LAST:event_jButton3MouseClicked
    
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // Finaliza la aplicación.
        System.exit(0);
    }//GEN-LAST:event_jButton4MouseClicked
    
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // Elimina un wallpaper
        Object o = jList1.getSelectedValue();
        if (o != null){
            String st = o.toString();
            int valor = JOptionPane.showConfirmDialog(this, "Está seguro que desea eliminar este archivo?", "Eliminar Wallpaper", JOptionPane.OK_CANCEL_OPTION);
            if (valor == JOptionPane.OK_OPTION){
                wx.eliminar(st);
                jList1.setModel(modeloLista());
                JOptionPane.showMessageDialog(this,"Wallpaper Eliminado");
            }else{
                JOptionPane.showMessageDialog(this,"No se ha eliminado nada.");
            }//if
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar un archivo, si es que lo hay");
        }//if
    }//GEN-LAST:event_jButton2MouseClicked
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
	    if (isThumbails()){
		    // Añade un wallpaper
		    String arch1 = new String();
		    String arch1only = new String();
		    if (wx.getExt1().equals("bmp")){
			    FileDialog fileDialog = new FileDialog(this, "Elegir " + wx.getExt1() + "...", FileDialog.LOAD);
			    fileDialog.show();
			    if (fileDialog.getFile() != null){
				    arch1 = fileDialog.getDirectory() + File.separator + fileDialog.getFile();
				    arch1only = fileDialog.getFile();
			    }//if
		    }else{
			    ImageFileChooser fc = new ImageFileChooser();
			    fc.setDialogTitle("Añadir Nuevo wallpaper");
			    fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
			    fc.setApproveButtonText("Seleccionar");
			    int response = fc.showOpenDialog(this);
			    if(response == JFileChooser.APPROVE_OPTION){
				    File file = fc.getSelectedFile();
				    if(file != null && file.isFile()){
					    arch1 = file.getPath();
					    arch1only = file.getName();
				    }//if
			    }//if
		    }//if
		    if(arch1.indexOf(wx.getExt1()) < 1){
			    JOptionPane.showMessageDialog(this, "Wallpaper No añadido");
			    jList1.setModel(modeloLista());
			    return;
		    }//if
		    //String arch2 = fileDialog.getFile();
		    String arch2 = arch1only;
		    //System.out.println("nombre: " + arch2);
		    try{
			    arch2 = wx.getDirActual() + File.separator + arch2;
			    wx.copia(arch1, arch2);
			    JOptionPane.showMessageDialog(this, "Wallpaper añadido");
		    }catch(IOException ioe){
			    System.out.println("Error de E/S: addWall-> " + ioe);
		    }//try
		    jList1.setModel(modeloLista());
	    }else{
		    JOptionPane.showMessageDialog(this,"No esta permitido añadir un wallpaper mientras Miniaturas esté activo.");
	    }//if
    }//GEN-LAST:event_jButton1MouseClicked
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //Finaliza la aplicación al dar click en el boton cerrar.
        System.exit(0);
    }//GEN-LAST:event_exitForm
    public DefaultListModel modeloLista(){
        /* Genera la jlist con los wallpapers
         * para ello, ejecuta el método ListaX de wallx, el cual
         * devuelve un vector con los elementos existentes en el
         * directorio de trabajo y de acuerdo al archivo de configuración
         * wallx.properties.
         */
        Vector lista = wx.ListaX();
        DefaultListModel modelo = new DefaultListModel();
        for (int i=0; i < lista.size(); i++){
            modelo.addElement(lista.get(i));
        }//for
        //Setea JLabel2 con la cantidad de wallpapers físicamente existentes.
        jLabel2.setText("Nº Wallpapers: " + String.valueOf(lista.size()));
        return modelo;
    }//modeloLista

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new FrameSis().show();
    }
    
    public void run() {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar trabajo;
    private javax.swing.JList jList1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
}
